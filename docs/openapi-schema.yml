openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/key/:
    get:
      operationId: listNapseAPIKeys
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NapseAPIKey'
          description: ''
      tags:
      - api
    post:
      operationId: createNapseAPIKey
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NapseAPIKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NapseAPIKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NapseAPIKey'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NapseAPIKey'
          description: ''
      tags:
      - api
  /api/key/connect/:
    get:
      operationId: connectNapseAPIKey
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NapseAPIKey'
          description: ''
      tags:
      - api
  /api/key/possible_permissions/:
    get:
      operationId: possiblePermissionsNapseAPIKey
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NapseAPIKey'
          description: ''
      tags:
      - api
  /api/key/{id}/:
    get:
      operationId: retrieveNapseAPIKey
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NapseAPIKey'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyNapseAPIKey
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/space/:
    get:
      operationId: listSpaces
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Space'
          description: ''
      tags:
      - api
    post:
      operationId: createSpace
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Space'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Space'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Space'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Space'
          description: ''
      tags:
      - api
  /api/space/possible_exchange_accounts/:
    get:
      operationId: possibleExchangeAccountsSpace
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Space'
          description: ''
      tags:
      - api
  /api/space/{id}/:
    get:
      operationId: retrieveSpaceDetail
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceDetail'
          description: ''
      tags:
      - api
    put:
      operationId: updateSpace
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Space'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Space'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Space'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Space'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSpace
      description: Partial update the connected user.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Space'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Space'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Space'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Space'
          description: ''
      tags:
      - api
  /api/exchange_account/:
    get:
      operationId: listExchangeAccounts
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExchangeAccount'
          description: ''
      tags:
      - api
    post:
      operationId: createExchangeAccount
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExchangeAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExchangeAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExchangeAccount'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeAccount'
          description: ''
      tags:
      - api
  /api/exchange_account/possible_exchanges/:
    get:
      operationId: possibleExchangesExchangeAccount
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeAccount'
          description: ''
      tags:
      - api
  /api/exchange_account/{id}/:
    get:
      operationId: retrieveExchangeAccountDetail
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeAccountDetail'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyExchangeAccount
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/bot/:
    get:
      operationId: listBots
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bot'
          description: ''
      tags:
      - api
    post:
      operationId: createBot
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Bot'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Bot'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
          description: ''
      tags:
      - api
  /api/bot/{id}/:
    get:
      operationId: retrieveBot
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
          description: ''
      tags:
      - api
  /api/fleet/:
    get:
      operationId: listFleets
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fleet'
          description: ''
      tags:
      - api
    post:
      operationId: createFleet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fleet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fleet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Fleet'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
          description: ''
      tags:
      - api
  /api/fleet/{id}/:
    get:
      operationId: retrieveFleet
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
          description: ''
      tags:
      - api
components:
  schemas:
    NapseAPIKey:
      type: object
      properties:
        name:
          type: string
          description: A free-form name for the API key. Need not be unique. 50 characters
            max.
          maxLength: 50
        prefix:
          type: string
          readOnly: true
        permissions:
          type: array
          items:
            type: object
            properties:
              uuid:
                type: string
                format: uuid
                readOnly: true
              permission_type:
                type: string
                maxLength: 200
              approved:
                type: boolean
              space:
                type: string
            required:
            - permission_type
            - space
          readOnly: true
        is_master_key:
          type: boolean
        revoked:
          type: boolean
          description: If the API key is revoked, clients cannot use it anymore. (This
            cannot be undone.)
        description:
          type: string
    Space:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        description:
          type: string
        exchange_account:
          type: string
        uuid:
          type: string
          format: uuid
          readOnly: true
        value:
          type: string
          readOnly: true
        delta:
          type: string
          readOnly: true
      required:
      - name
      - description
      - exchange_account
    SpaceDetail:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        description:
          type: string
        uuid:
          type: string
          format: uuid
          readOnly: true
        exchange_account:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        statistics:
          type: string
          readOnly: true
        wallet:
          type: object
          properties:
            title:
              type: string
              maxLength: 255
            value:
              type: string
              readOnly: true
            created_at:
              type: string
              format: date-time
              readOnly: true
            currencies:
              type: array
              items:
                type: object
                properties:
                  mbp:
                    type: number
                    readOnly: true
                  ticker:
                    type: string
                    readOnly: true
                  amount:
                    type: number
                    readOnly: true
                  value:
                    type: string
                    readOnly: true
              readOnly: true
            operations:
              type: string
              readOnly: true
          readOnly: true
        history:
          type: string
          readOnly: true
        fleets:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                maxLength: 100
              uuid:
                type: string
                format: uuid
                readOnly: true
              value:
                type: string
                readOnly: true
              bot_count:
                type: string
                readOnly: true
          readOnly: true
      required:
      - name
      - description
    ExchangeAccount:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        exchange:
          type: string
        name:
          type: string
          maxLength: 200
        description:
          type: string
        testing:
          type: boolean
          readOnly: true
      required:
      - exchange
      - name
      - description
    ExchangeAccountDetail:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        exchange:
          type: string
        name:
          type: string
          maxLength: 200
        testing:
          type: boolean
          readOnly: true
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        spaces:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                maxLength: 200
              description:
                type: string
              exchange_account:
                type: string
              uuid:
                type: string
                format: uuid
                readOnly: true
              value:
                type: string
                readOnly: true
              delta:
                type: string
                readOnly: true
            required:
            - name
            - description
            - exchange_account
          readOnly: true
      required:
      - exchange
      - name
      - description
    Bot:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        strategy:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            config:
              type: object
              properties:
                id:
                  type: integer
                  readOnly: true
                uuid:
                  type: string
                  format: uuid
                  readOnly: true
                immutable:
                  type: boolean
                  readOnly: true
                space:
                  type: integer
              required:
              - space
            architecture:
              type: object
              properties:
                id:
                  type: integer
                  readOnly: true
          required:
          - config
          - architecture
      required:
      - strategy
    Fleet:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        uuid:
          type: string
          format: uuid
          readOnly: true
        value:
          type: string
          readOnly: true
        bot_count:
          type: string
          readOnly: true
