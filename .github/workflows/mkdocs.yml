name: mkdocs

on:
  push:
    branches:
      - main
      - dev
      - feature/mkdocstring

permissions:
  contents: write
  
jobs:
  api-schema:
    name: API schema
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        python-version: 3.11

    - name: Set up python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        architecture: "x64"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pip-tools
        pip-compile ./requirements/development.txt --output-file ./full-requirements.txt --resolver=backtracking
        pip install -r ./full-requirements.txt

    - name: Write open-api schema
      run: python tests/test_app/manage.py spectacular --file docs/schema.yml

  deploy:
    needs: api-schema
    name: Deploy documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV 
      - uses: actions/cache@v3
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pip-tools
          pip-compile ./requirements/development.txt --output-file ./full-requirements.txt --resolver=backtracking
          pip install -r ./full-requirements.txt
      - name: Tests with coverage
        run: |
          export PYTHONPATH="$PYTHONPATH:./django-napse/"
          export NAPSE_IS_IN_PIPELINE=True
          cd tests/test_app
          bash setup_secrets.sh
          cd ../..
          python3 tests/test_app/manage.py makemigrations && python3 tests/test_app/manage.py migrate 
          coverage run ./tests/test_app/manage.py test -v2 --keepdb && coverage html
      - name: Deploy documentation
        run: |
          mkdocs gh-deploy --force
